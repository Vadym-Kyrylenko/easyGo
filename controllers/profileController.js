const { Profile, User } = require('../models');

module.exports = {
  getProfile(req, res) {
    const { id } = req.params;
    Profile.findOne({ where: { id }, include: [{ model: User, attributes: ['login', 'email', 'password'], required: true }] })
      .then((element) => {
        if (!element) {
          return res.status(404).json({ massage: `User not found with id ${id}` });
        }
        return res.status(200).json(element).send();
      })
      .catch(() => res.status(404).json({ massage: `User not found with id ${id}` }));
  },
  // check id if not number if has this id// create(req, res) {
  //   Profile.create(req.body).then(element => res.status(201).location(`/${element.id}/profile`).send())
  //     .catch(() => res.status(404).send('Not found'));
  // },

  updateProfile(req, res) {
    // Profile.validate({ lastName }).then(() => { });
    const objProps = Object.keys(Profile.rawAttributes);
    const newProps = objProps.filter((value) => {
      return Profile.rawAttributes[value]
        ._autoGenerated === undefined && !Profile.rawAttributes[value].references;
    });
    const requestParams = Object.keys(req.body);
    if (requestParams.lenght !== newProps.length) {
      return true;
    }
    console.log(newProps);
    // Profile.find;
    const { id } = req.params;
    // const { [gendr, age, about]} = req.body;
    Profile.findById(id)
      .then((element) => {
        if (!element) {
          return res.status(404).json({ massage: `User not found with id ${id}` });
        }
        return element
          .update(req.body)
          .then(() => res.status(200).send());
      })
      .catch(() => res.status(404).json({ massage: `User not found with id ${id}` }));
  },

  removeProfile(req, res) {
    const { id } = req.params; //
    Profile.findById(id)
      .then((element) => {
        if (!element) {
          return res.status(404).json({ massage: `User not found with id ${id}` });
        }
        return element.destroy()
          .then(() => res.status(400).send());
      })
      .catch(() => res.status(404).json({ massage: `User not found with id ${id}` }));
  },
};
